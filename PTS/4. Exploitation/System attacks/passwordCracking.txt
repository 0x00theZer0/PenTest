----------------------
-- Password Attacks --
----------------------

https://github.com/danielmiessler/SecLists/tree/master/Passwords

## Brute Forcing ##

# John the Ripper
john --list=formats     // encryption formats

unshadow passwd shadow > crackme    // john needs the usernmae, password hashes to be in the same file

john -incremental -users:<users list> <file to crack>   // pure brute force attack + selecting user accounts to crack
john -incremental -users:victim crackme
john --show crackme         // displays the passwords recovered by john

# Hashcat with masks
(/usr/share/doc/hashcat-data/examples)
hashcat -m 0 -a 3 example.hash ?l?l?l?l?l?l?l?l?a
hashcat -m 0 -a 3 example.hash ?a?a?a?a?a?a?a?a?a

## Dictionary Attacks ##

# John the Ripper
unshadow passwd shadow > crackme    // john needs the usernmae, password hashes to be in the same file

john -wordlist=<custom wordlist file> <file to crack>
john -wordlist=<custom wordlist file> -rules <file to crack>    // apply mangling on the tested words with -rules!
john -wordlist=<custom wordlist file> -rules -users=victim1,victim2 <file to crack>

john --wordlist=/usr/share/john/password.lst crackme
cat /root/.john/john.pot

# Hashcat   
hashcat -d
(/usr/share/doc/hashcat-data/examples)
hashcat -m 0 -a 0 example0.hash example.dict    (-m MD5 -a WORDLIST)   [0.02% recovered]
cat /root/.hashcat/hashcat.potfile    (stored cracked hashes + saves time since this informs also hashcat for hashes already cracked)

# Hashcat with rules
(/usr/share/doc/hashcat-data/examples)
gedit custom.rule   (l,u,c,r,$1,$2,$3,$4,$5,$6,$7,$8,$9,$0,[,],^1,^a,^!,$!  one on each line)
hashcat /root/.hashcat/hashcat.potfileshcat -m 0 -a 0 example0.hash example.dict -r ../rules/custom.rule   [0.4% recovered]
cat /root/.hashcat/hashcat.potfile
hashcat -m 0 -a 0 example0.hash example.dict -r ../rules/dive.rule       [26.1% recovered]

## Rainbow Tables ##

# ophcrack          // works only for windows passwords


https://github.com/danielmiessler/SecLists
